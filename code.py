// #include "DHT.h"

// #define DHTPIN 4          // GPIO 4 = D4 on ESP32
// #define DHTTYPE DHT22     // DHT sensor type: DHT11 or DHT22

// DHT dht(DHTPIN, DHTTYPE); // Create DHT object

// void setup() {
//   Serial.begin(9600);     // Start serial monitor
//   delay(1000);            // Wait for serial monitor to connect
//   dht.begin();            // Initialize the DHT sensor
// }

// void loop() {
//   // Read temperature and humidity
//   float temperature = dht.readTemperature();
//   float humidity = dht.readHumidity();

//   // Check if reads failed
//   if (isnan(temperature) || isnan(humidity)) {
//     Serial.println("‚ùå Failed to read from DHT sensor!");
//   } else {
//     Serial.print("üå°Ô∏è Temperature: ");
//     Serial.print(temperature);
//     Serial.println(" ¬∞C");

//     Serial.print("üíß Humidity: ");
//     Serial.print(humidity);
//     Serial.println(" %");
//   }

//   delay(3000); // Wait 3 seconds between readings
// }
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/7eb75e58-a94d-4167-97c6-7dbc58ac3016 

  Arduino IoT Cloud Variables description:

  The following variables are automatically generated and updated when changes are made to the Thing:

  CloudLight led;
  CloudTemperatureSensor temperature;
  CloudRelativeHumidity humidity;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include "DHT.h"

#define DHTPIN 4        // Replace this with 4 if you're now using GPIO 4
#define DHTTYPE DHT22
DHT dht(DHTPIN, DHTTYPE);

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  pinMode(2, OUTPUT);

  dht.begin();

  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors.
     The higher the number the more granular information you‚Äôll get.
     The default is 0 (only errors). Maximum is 4.
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  DHT_SENSOR_READ();
}

/*
  Since led is a READ_WRITE variable, onLedChange()
  is executed every time a new value is received from IoT Cloud.
*/
void onLedChange()  {
  if (led == 1) {
    digitalWrite(2, HIGH);
  } else {
    digitalWrite(2, LOW);
  }
}

void DHT_SENSOR_READ() {
  float h = dht.readHumidity();
  float t = dht.readTemperature();

  temperature = t;
  humidity = h;

  Serial.print("Temperature - ");
  Serial.println(t);
  Serial.print("Humidity - ");
  Serial.println(h);

  delay(1000);
}
